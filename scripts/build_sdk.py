#!/usr/bin/python

from scripting_utils import *
import build_sdk_android as android
import build_sdk_ios     as ios
import argparse

set_log_tag('TITANIUM-SDK')

if __name__ != "__main__":
    error('Error. Do not import this script, but run it explicitly.')
    exit()

# ------------------------------------------------------------------
# Arguments.
parser = argparse.ArgumentParser(description="Script used for building Adjust SDK for Appcelerator Titanium platform.")
parser.add_argument('-p', '--platform', help='Platform for which the scripts will be executed.', choices=['android', 'ios'])
parser.add_argument('-t', '--apptype', help='Type of the application to be updated (default = example).', choices=['example', 'test'], default='example')
parser.add_argument('-c', '--configuration', help='Build configuration (default = release).', choices=['release', 'debug'], default='release')
args = parser.parse_args()

# ------------------------------------------------------------------
# Paths
dir_scripts         = os.path.dirname(os.path.realpath(__file__))
dir_root            = os.path.dirname(os.path.normpath(dir_scripts))
dir_ext_android     = '{0}/ext/android'.format(dir_root)
dir_ext_ios         = '{0}/ext/ios'.format(dir_root)
version_titanium    = '7.5.0.GA'

# ------------------------------------------------------------------

debug_green('Setting Titanium SDK version to {0} ...'.format(version_titanium))
appc_select_sdk(version_titanium)

try:
    if args.platform == 'ios':
        set_log_tag('IOS-SDK-BUILD')
        check_submodule_dir('iOS', dir_ext_ios + '/sdk')
        ios.build(dir_root, args.apptype, args.configuration)
    else:
        set_log_tag('ANROID-SDK-BUILD')
        check_submodule_dir('Android', dir_ext_android + '/sdk')
        android.build(dir_root, args.apptype, args.configuration)
finally:
    # Remove autogenerated Python compilation files.
    remove_files('*.pyc', dir_scripts, log=False)

emulated_name = 'emulator';
if args.platform == 'ios':
    emulated_name = 'simulator'

debug_green('Run from IDE or:')
if args.apptype == 'example':
    debug_green('Emulator: cd {0}/example; appc ti build -p {1} -T {2}'.format(dir_root, args.platform, emulated_name))
    debug_green('Device: cd {0}/example; appc ti build -p {1} -T device'.format(dir_root, args.platform))
else:
    debug_green('Emulator: cd {0}/test/app; appc ti build -p {1} -T {2}'.format(dir_root, args.platform, emulated_name))
    debug_green('Device: cd {0}/test/app; appc ti build -p {1} -T device'.format(dir_root, args.platform))

debug_green('Script completed!')
